CGclustAnn <- CGclustAnn_RefSeqName(cgAnnotation,nCGcluster = nCGclusters, clusterSize = CGclusterSize)
}else if(by == "RefGene_Accession"){
CGclustAnn <- CGclustAnn_RefSeqAcc(cgAnnotation,  nCGcluster = nCGclusters, clusterSize = CGclusterSize)
} else { stop("Invalid input for by = ")}
}
View(CGclustAnn)
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
integrated.meth.corr.betadiff.ACC <- read.csv("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/integrated analyses meth corr betaDiff all tumors/results/integrated meth corr betadiff ACC.txt", sep="")
View(integrated.meth.corr.betadiff.ACC)
View(integrated.meth.corr.betadiff.ACC)
colnames(integrated.meth.corr.betadiff.ACC)
diffExprMatrix <- read.csv("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/differential analysis between tumor and samplePool expression/results/differential analysis between ACC and samplePool expr.txt", sep="")
View(diffExprMatrix)
data("cgAnnotation")
View(cgAnnotation)
genelist <- cgAnnotation$UCSC_RefGene_Name
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
genelist
genelist <- genelist[2:length(genelist)]
genelist
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
genelist2 <- genelist[2:length(genelist)]
View(diffExprMatrix)
diffExprMatrix2 <- diffExprMatrix[diffExprMatrix$UCSC_RefGene_Name %in% genelist]
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
genelist <- genelist[2:length(genelist)
diffExprMatrix2 <- diffExprMatrix[diffExprMatrix$UCSC_RefGene_Name %in% genelist, ]
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
data("cgAnnotation")
diffExprMatrix <- read.csv("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/differential analysis between tumor and samplePool expression/results/differential analysis between ACC and samplePool expr.txt", sep="")
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
genelist2 <- genelist[2:length(genelist)]
diffExprMatrix2 <- diffExprMatrix[diffExprMatrix$UCSC_RefGene_Name %in% genelist2, ]
data("cgAnnotation")
diffExprMatrix2 <- read.csv("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/differential analysis between tumor and samplePool expression/results/differential analysis between ACC and samplePool expr.txt", sep="")
genelist <- unique(cgAnnotation$UCSC_RefGene_Name)
genelist2 <- genelist[2:length(genelist)]
diffExprMatrix <- diffExprMatrix2[diffExprMatrix2$UCSC_RefGene_Name %in% genelist2, ]
save(diffExprMatrix, file = "data/diffExprMatrix.rda")
devtools::build()
ls()
methDNAcluster <- methDNAcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, by = "genomePosition", nCGclusters = 1)
library(EpiMethEx2.0)
methDNAcluster <- methDNAcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, by = "genomePosition", nCGclusters = 1)
data("cgAnnotation")
data("methDNAmatrix")
data("CGclusterAnn_Accession")
CGclusterAnn <- CGclusterAnn_Accession
methDNAcluster <- methDNAcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, by = "genomePosition", nCGclusters = 1)
methDNAcluster <- methDNAcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, by = "RefGene_Accession", nCGclusters = 1)
methDNAclusters <- methDNAcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, by = "RefGene_Accession", nCGclusters = 1)
save(methDNAclusters, file = "data/methDNAclusters.rda")
data("corrMatrix")
corrClusters <- corrCluster(cgAnnotation, CGclusterAnn, corrMatrix, by = "RefGene_Name", nCGclusters = 1)
corrClusters <- corrCluster(cgAnnotation, CGclusterAnn, corrMatrix, by = "RefGene_Accession", nCGclusters = 1)
save(corrClusters, file = "data/corrClusters.rda")
data("betaDiffmatrix")
betaDiffclusters <- betaDiffcluster(cgAnnotation, CGclusterAnn, methDNAmatrix, betaDiffmatrix, by = "RefGene_Accession", nCGclusters = 1)
save(betaDiffclusters, file = "data/betaDiffclusters.rda")
devtools::build()
devtools::build()
devtools::build()
integrCluster <- function(CGclusterAnn, methDNAclusters, betaDiffclusters, corrClusters,){
integrCluster <- function(methDNAmatrix, betaDiffmatrix, corrMatrix, diffExprMatrix, CGclusterAnn, methDNAclusters, betaDiffclusters, corrClusters){
dfmeth2 <- read.csv(paste0("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/meth median levels clustering by NM annotation/results/CG median levels NMclusters ", tumor, ".txt"), sep="")
dfcorr2 <- read.csv(paste0("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/corr median levels clustering by NMannotation/results/corr median levels NMClusters ", tumor, ".txt"), sep="")
dfBetaDif2 <- read.csv(paste0("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/beta difference clustering by NM annotation/results/BetaDiff median levels NMclusters ", tumor, ".txt"), sep="")
dfmeth <- dfmeth2[!is.na(dfmeth2$cgclusterName), ]
dfcorr <- dfcorr2[!is.na(dfcorr2$corrClusterName), ]
dfBetaDif <- dfBetaDif2[!is.na(dfBetaDif2$cgclusterName), ]
#AccessionList <- "NM_005516_Body_chr6:30458519-30458730"
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- NMannotation[NMannotation$clusterName %in% i & NMannotation$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
diffExprTumor <- read.csv(paste0("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/pan-cancer analyses/differential analysis between tumor and samplePool expression/results/differential analysis between ", tumor, " and samplePool expr.txt"), sep="")
diffExprTumor <- diffExprTumor[ , c(1, 2, 4, 5)]
colnames(diffExprTumor)[colnames(diffExprTumor) == "MeanTumor"] <- "mean.expr.tumor"
colnames(diffExprTumor)[colnames(diffExprTumor) == "logFC"] <- "logFC.expr.tumor.vs.normal"
colnames(diffExprTumor)[colnames(diffExprTumor) == "pValue"] <- "pValue.logFC.expr"
resultdef <- merge(result, diffExprTumor, by = "UCSC_RefGene_Name", all.x = TRUE)
}
devtools::build()
devtools::build()
devtools::build()
integrCluster <- function(methDNAmatrix, betaDiffmatrix, corrMatrix, diffExprMatrix, CGclusterAnn, methDNAclusters, betaDiffclusters, corrClusters){
dfmeth <- methDNAclusters[!is.na(methDNAclusters$cgclusterName), ]
dfcorr <- corrClusters[!is.na(corrClusters$corrClusterName), ]
dfBetaDif <- betaDiffclusters[!is.na(betaDiffclusters$cgclusterName), ]
AccessionList <- unique(CGclusterAnn$clusterName)
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- CGclusterAnn[CGclusterAnn$clusterName %in% i & CGclusterAnn$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
diffExprTumor <- diffExprTumor[ , c(1, 2, 4, 5)]
colnames(diffExprTumor)[colnames(diffExprTumor) == "MeanTumor"] <- "mean.expr.tumor"
colnames(diffExprTumor)[colnames(diffExprTumor) == "logFC"] <- "logFC.expr.tumor.vs.normal"
colnames(diffExprTumor)[colnames(diffExprTumor) == "pValue"] <- "pValue.logFC.expr"
resultdef <- merge(result, diffExprTumor, by = "UCSC_RefGene_Name", all.x = TRUE)
}
devtools::build()
devtools::build()
data("CGclusterAnn_Accession")
View(CGclusterAnn_Accession)
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
integrCluster <- function(methDNAmatrix, betaDiffmatrix, corrMatrix, diffExprMatrix, CGclusterAnn, methDNAclusters, betaDiffclusters, corrClusters){
dfmeth <- methDNAclusters[!is.na(methDNAclusters$cgclusterName), ]
dfcorr <- corrClusters[!is.na(corrClusters$corrClusterName), ]
dfBetaDif <- betaDiffclusters[!is.na(betaDiffclusters$cgclusterName), ]
AccessionList <- unique(CGclusterAnn$clusterName)
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- CGclusterAnn[CGclusterAnn$clusterName %in% i & CGclusterAnn$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
diffExprMatrix <- diffExprMatrix[ , c(1, 2, 4, 5)]
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "MeanTumor"] <- "mean.expr.tumor"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "logFC"] <- "logFC.expr.tumor.vs.normal"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "pValue"] <- "pValue.logFC.expr"
resultdef2 <- merge(result, diffExprMatrix, by = "UCSC_RefGene_Name", all.x = TRUE)
resultdef <- merge(CGclusterAnn, resultdef2[ ,c(2, 16, 23:35)], by =c("clusterName", "ID"), all.x = TRUE)
resultdef <- resultdef[ ,c(2:16, 1, 17:35)]
}
devtools::build()
integrCluster <- function(methDNAmatrix, betaDiffmatrix, corrMatrix, diffExprMatrix, CGclusterAnn, methDNAclusters, betaDiffclusters, corrClusters){
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
CGclusterAnn$clusterType <- NULL
dfmeth <- methDNAclusters[!is.na(methDNAclusters$cgclusterName), ]
dfcorr <- corrClusters[!is.na(corrClusters$corrClusterName), ]
dfBetaDif <- betaDiffclusters[!is.na(betaDiffclusters$cgclusterName), ]
AccessionList <- unique(CGclusterAnn$clusterName)
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- CGclusterAnn[CGclusterAnn$clusterName %in% i & CGclusterAnn$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
diffExprMatrix <- diffExprMatrix[ , c(1, 2, 4, 5)]
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "MeanTumor"] <- "mean.expr.tumor"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "logFC"] <- "logFC.expr.tumor.vs.normal"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "pValue"] <- "pValue.logFC.expr"
resultdef2 <- merge(result, diffExprMatrix, by = "UCSC_RefGene_Name", all.x = TRUE)
resultdef <- merge(CGclusterAnn, resultdef2[ ,c(2, 16, 23:35)], by =c("clusterName", "ID"), all.x = TRUE)
resultdef <- resultdef[ ,c(2:16, 1, 17:35)]
}
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
data("methDNAmatrix")
data("corrMatrix")
data("betaDiffmatrix")
data("diffExprMatrix")
data("CGclusterAnn_Accession")
CGclusterAnn <- CGclusterAnn_Accession
data("methDNAclusters")
data("betaDiffclusters")
data("corrClusters")
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
CGclusterAnn$clusterType <- NULL
dfmeth <- methDNAclusters[!is.na(methDNAclusters$cgclusterName), ]
dfcorr <- corrClusters[!is.na(corrClusters$corrClusterName), ]
dfBetaDif <- betaDiffclusters[!is.na(betaDiffclusters$cgclusterName), ]
AccessionList <- unique(CGclusterAnn$clusterName)
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- CGclusterAnn[CGclusterAnn$clusterName %in% i & CGclusterAnn$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
library(EpiMethEx2.0)
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
data("methDNAmatrix")
data("corrMatrix")
data("betaDiffmatrix")
data("diffExprMatrix")
data("CGclusterAnn_Accession")
CGclusterAnn <- CGclusterAnn_Accession
data("methDNAclusters")
data("betaDiffclusters")
data("corrClusters")
if(unique(CGclusterAnn$clusterType) == "RefGene_Accession"){"Valid CGclusterAnn"}else { stop("Invalid CGclusterAnn")}
CGclusterAnn$clusterType <- NULL
dfmeth <- methDNAclusters[!is.na(methDNAclusters$cgclusterName), ]
dfcorr <- corrClusters[!is.na(corrClusters$corrClusterName), ]
dfBetaDif <- betaDiffclusters[!is.na(betaDiffclusters$cgclusterName), ]
AccessionList <- unique(CGclusterAnn$clusterName)
count = 0
clusterlist <- list()
for(i in AccessionList){
count <- count + 1
n = 1
methCluster <- unique(dfmeth[dfmeth$clusterName %in% i, c("cgclusterName")])
corrCluster <- unique(dfcorr[dfcorr$clusterName %in% i, c("corrClusterName")])
betadiffCluster <- unique(dfBetaDif[dfBetaDif$clusterName %in% i, c("cgclusterName")])
if(length(na.omit(methCluster))>0 & length(na.omit(corrCluster))>0 & length(na.omit(betadiffCluster))>0){
for (ii in methCluster){
methVector <- dfmeth[dfmeth$cgclusterName %in% ii, c("ID")]
for (iii in corrCluster){
corrVector <- dfcorr[dfcorr$corrClusterName %in% iii,c("ID")]
for (iiii in betadiffCluster){
betadiffVector <- dfBetaDif[dfBetaDif$cgclusterName %in% iiii,c("ID")]
interVect <- Reduce(intersect,list(methVector, corrVector, betadiffVector))
if (length(interVect) >= 2){
methType <- (strsplit(ii, "_"))
methName <- sapply(methType, function(x) x[4])
corrType <- (strsplit(iii, "_"))
corrName <- sapply(corrType, function(x) x[2])
betadiffType2 <- (strsplit(iiii, "_"))
betadiffName2  <- sapply(betadiffType2, function(x) x[4:5])
betadiffName  <- paste(betadiffName2, collapse = "_")
SubsetAnn <- CGclusterAnn[CGclusterAnn$clusterName %in% i & CGclusterAnn$ID %in% interVect, ]
clusterName <- paste0(unique(SubsetAnn$UCSC_RefGene_Name), "_",unique(SubsetAnn$UCSC_RefGene_Accession), "_", unique(SubsetAnn$UCSC_RefGene_Group), "_",unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
VectName <- paste0(clusterName,"_", methName, "Meth_", corrName, "_", betadiffName,"_", n)
SubsetAnn$integratedCluster <- VectName
SubsetAnn$ClusterGenCoordinate <- paste0(unique(SubsetAnn$chr), ":",min(SubsetAnn$CGposition),"-", max(SubsetAnn$CGposition))
Subsetmeth <- dfmeth[dfmeth$clusterName %in% i & dfmeth$ID %in% interVect,c("ID", "medianvalue")]
colnames(Subsetmeth)[colnames(Subsetmeth) == "medianvalue"] <- "CG.median.methDNA"
merged1 <- merge(SubsetAnn, Subsetmeth, by = "ID")
Subsetcorr <- dfcorr[dfcorr$clusterName %in% i & dfcorr$ID %in% interVect, c("ID", "cor", "p") ]
colnames(Subsetcorr)[colnames(Subsetcorr) == "cor"] <- "CG.median.corr"
colnames(Subsetcorr)[colnames(Subsetcorr) == "p"] <- "CG.corr.pValue"
merged2 <- merge(merged1, Subsetcorr, by = "ID")
Subsetbetadiff <- dfBetaDif[dfBetaDif$clusterName %in% i & dfBetaDif$ID %in% interVect, c("ID", "beta_diff", "pValue") ]
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "beta_diff"] <- "CG.median.betaDiff"
colnames(Subsetbetadiff)[colnames(Subsetbetadiff) == "pValue"] <- "CG.betaDiff.pValue"
merged3 <- merge(merged2, Subsetbetadiff, by = "ID")
clusterlist[[count]] <- merged3
} # if length intersection vectors > 2
n = n + 1
} # for iiii
} # for iii
} # for ii
} # if test number of clusters
print (paste0("Processing: ", count, " of ", length(AccessionList)))
}  #for i
result <- do.call(rbind, clusterlist)
result <- result %>%
group_by(integratedCluster) %>%
mutate(cluster.median.methDNA = median(CG.median.methDNA), cluster.median.corr = median(CG.median.corr), cluster.median.betaDiff = median(CG.median.betaDiff))
diffExprMatrix <- diffExprMatrix[ , c(1, 2, 4, 5)]
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "MeanTumor"] <- "mean.expr.tumor"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "logFC"] <- "logFC.expr.tumor.vs.normal"
colnames(diffExprMatrix)[colnames(diffExprMatrix) == "pValue"] <- "pValue.logFC.expr"
resultdef2 <- merge(result, diffExprMatrix, by = "UCSC_RefGene_Name", all.x = TRUE)
resultdef <- merge(CGclusterAnn, resultdef2[ ,c(2, 16, 23:35)], by =c("clusterName", "ID"), all.x = TRUE)
View(resultdef2)
View(result)
resultdef <- merge(CGclusterAnn, resultdef2[ ,c(2, 16, 23:34)], by =c("clusterName", "ID"), all.x = TRUE)
View(resultdef)
resultdef <- resultdef[ ,c(2:16, 1, 17:33)]
devtools::build()
Integrated.CG.clusters <- read.csv("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/table for website/Integrated CG clusters.txt", sep="")
View(Integrated.CG.clusters)
devtools::build()
devtools::build()
install.packages("C:/saverio/università/EpiMetheEX/EpiMethex 2.0/Files def/EpiMethEx as package/EpiMethEx2.0_0.1.0.tar.gz", repos = NULL, type = "source")
library(EpiMethEx2.0)
git init
git init
git --version
git --version
git init
git config --global user.name "Saverio-Candido"
